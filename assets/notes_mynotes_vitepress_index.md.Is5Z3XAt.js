import{_ as e,o as s,c as t,R as i}from"./chunks/framework.TktCGlL7.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"notes/mynotes/vitepress/index.md","filePath":"notes/mynotes/vitepress/index.md","lastUpdated":1702604926000}'),r={name:"notes/mynotes/vitepress/index.md"},a=i('<h6 id="什么是-vitepress" tabindex="-1">什么是 VitePress？ <a class="header-anchor" href="#什么是-vitepress" aria-label="Permalink to &quot;什么是 VitePress？&quot;">​</a></h6><p><strong>VitePress 是 VuePress 的下一代框架，是基于 Vue3+Vite 构建的静态站生成器。</strong></p><p>原先的 VuePress 是基于 Webpack 构建，本地启动开发一个只有几个简单页面的文档站点需要等待的时间让人难以忍受。即使是 <code>HMR</code>热更新也需要几秒钟的时间才能在浏览器中显示出来。</p><p>从根本上说，这是因为 VuePress 是 webpack 的一个应用程序。即使只有两页，这也是一个完整的 webpack 项目(包括所有的主题源文件)正在编译。当项目有很多页面时，情况会变得更糟：每个页面都必须先完全编译，然后服务器才能显示内容！</p><p>Vite 很好地解决了这些问题：几乎立即启动服务器，只按需编译正在服务的页面，以及闪电般的快速 hmr。所以基于 Vue3 和 Vite 的 VitePress 诞生了。</p><h6 id="vitepress-的优势" tabindex="-1">VitePress 的优势 <a class="header-anchor" href="#vitepress-的优势" aria-label="Permalink to &quot;VitePress 的优势&quot;">​</a></h6><ol><li>VitePress 是 VuePress 的下一代框架，所以它有 VuePress 的所有优点；</li><li>具有 Vite 的速度， 开发服务器启动快，热更新快，构建快，只按需编译正在服务的页面；</li><li>利用 Vue 3 做的一些优化， JS 负载更容易解析，hydration 也变得更快。</li><li>容易上手，VitePress 更多的是主观性的并且配置很少。</li><li>VitePress 是面向未来的：VitePress 仅适用于支持原生 ES 模块导入的浏览器，鼓励使用没有经过转换的原生 JavaScript 以及主题化中使用 CSS 变量。</li></ol><p><strong>总之，性能好，是未来的。</strong></p><h6 id="现在的不足" tabindex="-1">现在的不足 <a class="header-anchor" href="#现在的不足" aria-label="Permalink to &quot;现在的不足&quot;">​</a></h6><ol><li>还在开发中，体验有点糟糕，官方文档奇奇怪怪，像假的。</li></ol><blockquote><p>警告 VitePress 是早期的 WIP！目前的重点首先是让 Vite 稳定和功能完善。目前，不推荐将其用于任何正式的场景。</p></blockquote><ol start="2"><li>网上踩坑的经验太少，需要自己解决，我还参考过 vuepress 的踩坑文章。</li><li>配置少，或者说官方文档写的不好；可以看一下 VuePress 的文档，它上面得配置竟然也能用。</li></ol>',12),o=[a];function l(n,p,c,d,V,_){return s(),t("div",null,o)}const u=e(r,[["render",l]]);export{h as __pageData,u as default};
